AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ClusterNodeType:
    Description: The compute and memory capacity of the nodes in the Redis Cluster
    Type: String
    Default: cache.t2.small
    AllowedValues:
      - cache.t2.small
      - cache.t2.medium
  
  ECSSecurityGroup:
    Description: Security Group containing ECS Host
    Type: AWS::EC2::SecurityGroup::Id

  #LambdaSecurityGroup:
  #  Description: Security Group Contianing Lambda Function
  #  Type: AWS::EC2::SecurityGroup::Id

Resources:
  RedisCluster:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      CacheNodeType: !Ref ClusterNodeType
      VpcSecurityGroupIds:
        - !Ref CacheSecurityGroup
      Engine: redis
      NumCacheNodes: 1
  CacheSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: ElastiCache security group
  CacheSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: Allow access from ECS Containers
      GroupId: !GetAtt CacheSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: !GetAtt RedisCluster.RedisEndpoint.Port
      ToPort: !GetAtt RedisCluster.RedisEndpoint.Port
      SourceSecurityGroupId: !Ref ECSSecurityGroup
      # Might need to address also adding the Lambdas
      # and creating an additional security group
      #IpProtocol: tcp
      #FromPort: !GetAtt RedisCluster.RedisEndpoint.Port
      #ToPort: !GetAtt RedisCluster.RedisEndpoint.Port
      #SourceSecurityGroupId: !Ref LambdaSecurityGroup