Description: >

    This template is based on the ECS Reference Architecture template and creates the necessary resources to
    deploy a predition model serviing architecture..

Parameters:

    TemplateBucket:
        Type: String
        Description: S3 Bucket containing CloudFormation Templates
        Default: lnn

    InstanceType:
        Type: String
        Description: Instance supporting the compute type for Jupyter
        Default: t2.large
        AllowedValues:
            - t2.large
            - t2.xlarge

    ECRRepository:
        Type: String
        Description: Container repository for mxnet development containers
        Default: deeplearning.ai
    
    ClusterNodeType:
        Description: ElastiCache Node type
        Type: String
        Default: cache.t2.small
        AllowedValues:
            - cache.t2.small
            - cache.t2.medium
    
    TopicEmail:
        Default: mail@example.com
        Description: E-Mail Address to send Training Alerts to
        Type: String

Metadata:

    AWS::CloudFormation::Interface:
        ParameterLabels:
            InstanceType:
                default: "InstanceType"
            TemplateBucket:
                default: "TemplateBucket"
            ClusterNodeType:
                default: "ClusterNodeType"
            ECRRepository:
                default: "ECRRepository"
            TopicEmail:
                default: "TopicEmail"

        ParameterGroups:
            - Label:
                default: Infrastructure Configuration
              Parameters:
                  - InstanceType
                  - ClusterNodeType
            - Label:
                default: Training Pipline Configuration
              Parameters:
                  - TemplateBucket
                  - ECRRepository
                  - TopicEmail

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/infrastructure/vpc.yaml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.0.0.0/16
                PublicSubnet1CIDR:  10.0.8.0/21
                PublicSubnet2CIDR:  10.0.16.0/21
                PrivateSubnet1CIDR: 10.0.24.0/21
                PrivateSubnet2CIDR: 10.0.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/infrastructure/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: !Ref InstanceType
                ClusterSize: 2
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    lambdaService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/services/lambda-dev/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 1
                EnvironmentName: !Ref AWS::StackName
                ECRRepository: !Ref ECRRepository
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    predictService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/services/predict/service.yaml
            Parameters:
                VPC: !GetAtt VPC.Outputs.VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 1
                EnvironmentName: !Ref AWS::StackName
                ECRRepository: !Ref ECRRepository
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
    
    Redis:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/infrastructure/redis.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
                PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2
                VPC: !GetAtt VPC.Outputs.VPC
                ClusterNodeType: !Ref ClusterNodeType
    
    trainLambda:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/lnn/deploy/lambda/train/lambda.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                TopicEmail: !Ref TopicEmail
                S3Bucket: !Ref TemplateBucket
                PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
                PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup

Outputs:

    lambdaServiceUrl:
        Description: The URL endpoint for the Lambda Development Environment
        Value: !Join [ ":", [ !GetAtt lambdaService.Outputs.ServiceUrl, "8888"]]

    predictServiceUrl:
        Description: The URL endpoint for the Prediction App
        Value: !GetAtt predictService.Outputs.ServiceUrl

# Add prediction sercice URL's